openapi: 3.0.0
info:
  version: 1.0.0
  title: Sample API
  description: A sample API to illustrate OpenAPI concepts

# components:
#  securitySchemes:
#    BasicAuth:
#      type: http
#      scheme: basic
# security:
#   - BasicAuth: []
paths:
  /:
    get:
      description: Get a list of Tenants
      operationId: api.index
      responses:
        '200':
          description: Tenant List for you, sire.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tenant'

        
        '400':
          $ref: '#/components/responses/400Error'
  
  /tenants:
    get:
      description: Get a list of Tenants
      operationId: api.get_tenant
      responses:
        '200':
          description: Tenant List for you, sire.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tenant'

        '400':
          $ref: '#/components/responses/400Error'


  /create_tenant:
    post:
      description: Lets a user create a new Tenant.
      operationId: api.create_tenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'

      responses:
        '200':
          description: Successfully created a new Tenant
        '400':
          $ref: '#/components/responses/400Error'




  /tenants/{name}:
    get:
      description: Get a specific Tenant by it's name.
      operationId: api.get_tenants
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          $ref: '#/components/responses/400Error'


components:
  schemas:
    Tenant:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        num_of_vrf:
            type: integer


  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object 
            properties:
              message:
                type: string
